SET CAMPAIGN_VERSION = 283639;
set mapred.job.queue.name=aa;

drop table if exists SSHARMA_DB.CELLS_${hiveconf:CAMPAIGN_VERSION};
CREATE TABLE SSHARMA_DB.CELLS_${hiveconf:CAMPAIGN_VERSION} AS SELECT * FROM MDS_NEW.ODS_CELL_T
WHERE CAMPAIGN_ID='${hiveconf:CAMPAIGN_VERSION}';

drop table if exists SSHARMA_DB.MAILED_${hiveconf:CAMPAIGN_VERSION};
CREATE TABLE SSHARMA_DB.MAILED_${hiveconf:CAMPAIGN_VERSION} AS SELECT A.CUSTOMER_KEY, A.EVENT_TYPE, B.CELL_KEY, B.CELL_LABEL, B.TREATMENT_CODE,
C.GAP_CAMPAIGN_START_DATE AS START_DT, C.GAP_CAMPAIGN_END_DATE AS END_DT
FROM (select * from MDS_NEW.ODS_MAILINGMAILHOUSE_T where EVENT_TYPE='M') A 
inner join 
SSHARMA_DB.CELLS_${hiveconf:CAMPAIGN_VERSION} B 
on A.CELL_KEY = B.CELL_KEY
inner join 
(select * from MDS_NEW.ODS_CAMPAIGN_T where CAMPAIGN_ID ='${hiveconf:CAMPAIGN_VERSION}')  C
on B.CAMPAIGN_ID=C.CAMPAIGN_ID;

drop table if exists SSHARMA_DB.START_END_${hiveconf:CAMPAIGN_VERSION};
CREATE TABLE SSHARMA_DB.START_END_${hiveconf:CAMPAIGN_VERSION} AS 
SELECT MAX(START_DT) AS START_DT, MAX(END_DT) AS END_DT FROM SSHARMA_DB.MAILED_${hiveconf:CAMPAIGN_VERSION};

drop table if exists SSHARMA_DB.SHOPPERS_${hiveconf:CAMPAIGN_VERSION}_GRP_0;
CREATE TABLE SSHARMA_DB.SHOPPERS_${hiveconf:CAMPAIGN_VERSION}_GRP_0 AS SELECT 
A.CUSTOMER_KEY, A.ORDER_STATUS, 
A.TRANSACTION_NUM, 
A.ORDER_NUM,A.transaction_date
FROM 
(select *,(case when ORDER_STATUS='R' then ship_date  when ORDER_STATUS='O' then demand_date end) as transaction_date 
from MDS_NEW.ODS_ORDERHEADER_T WHERE BRAND='AT' AND COUNTRY='US' AND TRANSACTION_TYPE_CD IN ('S','M')) A
inner join 
SSHARMA_DB.MAILED_${hiveconf:CAMPAIGN_VERSION} C
on A.CUSTOMER_KEY=C.CUSTOMER_KEY;

drop table if exists SSHARMA_DB.SHOPPERS_${hiveconf:CAMPAIGN_VERSION}_GRP_0_CARTESIAN;
CREATE TABLE SSHARMA_DB.SHOPPERS_${hiveconf:CAMPAIGN_VERSION}_GRP_0_CARTESIAN AS SELECT 
A.CUSTOMER_KEY, A.ORDER_STATUS, 
A.TRANSACTION_NUM, 
A.ORDER_NUM,A.transaction_date,B.START_DT,B.END_DT
FROM SSHARMA_DB.SHOPPERS_${hiveconf:CAMPAIGN_VERSION}_GRP_0 A JOIN
SSHARMA_DB.START_END_${hiveconf:CAMPAIGN_VERSION} B;

drop table if exists  SSHARMA_DB.SHOPPERS_${hiveconf:CAMPAIGN_VERSION}_GRP_0_STARTEND;
CREATE TABLE SSHARMA_DB.SHOPPERS_${hiveconf:CAMPAIGN_VERSION}_GRP_0_STARTEND AS SELECT 
A.CUSTOMER_KEY, A.ORDER_STATUS, 
A.TRANSACTION_NUM, 
A.ORDER_NUM,A.transaction_date
FROM SSHARMA_DB.SHOPPERS_${hiveconf:CAMPAIGN_VERSION}_GRP_0_CARTESIAN A 
where A.transaction_date>=A.START_DT AND A.transaction_date<=A.END_DT;

drop table if exists ssharma_db.SHOPPERS_${hiveconf:CAMPAIGN_VERSION}_GRP_0_line;
create table ssharma_db.SHOPPERS_${hiveconf:CAMPAIGN_VERSION}_GRP_0_line as
SELECT
T1.*,
T2.LINE_NUM,
T2.ITEM_QTY,
T2.SALES_AMT,
T3.DISCOUNT_AMT,
T2.TOT_PRD_CST_AMT,
T2.PRODUCT_KEY
FROM
SSHARMA_DB.SHOPPERS_${hiveconf:CAMPAIGN_VERSION}_GRP_0_STARTEND T1
INNER JOIN
MDS_NEW.ODS_ORDERLINE_T T2
ON
T1.TRANSACTION_NUM = T2.TRANSACTION_NUM
LEFT OUTER JOIN
(
SELECT 
TRANSACTION_NUM, LINE_NUM, SUM(DISCOUNT_AMT) AS DISCOUNT_AMT
FROM
MDS_NEW.ODS_ORDERLINE_DISCOUNTS_T
GROUP BY TRANSACTION_NUM, LINE_NUM
) T3
ON
T2.TRANSACTION_NUM = T3.TRANSACTION_NUM AND
T2.LINE_NUM = T3.LINE_NUM;

drop table if exists ssharma_db.SHOPPERS_${hiveconf:CAMPAIGN_VERSION}_GRP_1;
CREATE TABLE ssharma_db.SHOPPERS_${hiveconf:CAMPAIGN_VERSION}_GRP_1 AS SELECT
CUSTOMER_KEY, ORDER_STATUS, 
COUNT(DISTINCT TRANSACTION_NUM) AS DISTINCT_TRANSACTION_NUM, 
COUNT(DISTINCT ORDER_NUM) AS DISTINCT_ORDER_NUM,
SUM(ITEM_QTY) AS ITEM_QTY,
SUM(NVL(SALES_AMT,0)) AS GROSS_SALES_AMT, 
SUM(NVL(DISCOUNT_AMT,0)) AS DISCOUNT_AMT, 
SUM(NVL(TOT_PRD_CST_AMT,0)) AS TOT_PRD_CST_AMT
FROM ssharma_db.SHOPPERS_${hiveconf:CAMPAIGN_VERSION}_GRP_0_line 
GROUP BY CUSTOMER_KEY, ORDER_STATUS ORDER BY CUSTOMER_KEY, ORDER_STATUS;

drop table if exists SSHARMA_DB.SHOPPERS_${hiveconf:CAMPAIGN_VERSION}_GRP_2;
CREATE TABLE SSHARMA_DB.SHOPPERS_${hiveconf:CAMPAIGN_VERSION}_GRP_2 AS SELECT
CUSTOMER_KEY, 
ORDER_STATUS, 
ITEM_QTY,
GROSS_SALES_AMT, 
DISCOUNT_AMT, 
TOT_PRD_CST_AMT,
(CASE WHEN ORDER_STATUS = 'R' THEN DISTINCT_TRANSACTION_NUM ELSE cast(0 as bigint) END) AS DISTINCT_TRANSACTION_NUM,
(CASE WHEN ORDER_STATUS = 'O' THEN DISTINCT_ORDER_NUM ELSE cast(0 as bigint) END) AS DISTINCT_ORDER_NUM
FROM SSHARMA_DB.SHOPPERS_${hiveconf:CAMPAIGN_VERSION}_GRP_1;

drop table if exists SSHARMA_DB.SHOPPERS_${hiveconf:CAMPAIGN_VERSION}_GRP_3;
CREATE TABLE SSHARMA_DB.SHOPPERS_${hiveconf:CAMPAIGN_VERSION}_GRP_3 AS SELECT
CUSTOMER_KEY, 
SUM(ITEM_QTY) AS ITEM_QTY,
SUM(GROSS_SALES_AMT) AS GROSS_SALES_AMT, 
SUM(DISCOUNT_AMT) AS DISCOUNT_AMT, 
SUM(TOT_PRD_CST_AMT) AS TOT_PRD_CST_AMT,
SUM(GROSS_SALES_AMT + DISCOUNT_AMT) AS NET_SALES_AMT,
SUM(DISTINCT_TRANSACTION_NUM + DISTINCT_ORDER_NUM) AS NUM_TXNS,
SUM(GROSS_SALES_AMT + DISCOUNT_AMT)/SUM(DISTINCT_TRANSACTION_NUM + DISTINCT_ORDER_NUM) AS AVG_ORD_SZ
FROM SSHARMA_DB.SHOPPERS_${hiveconf:CAMPAIGN_VERSION}_GRP_2
GROUP BY CUSTOMER_KEY;

drop table if exists SSHARMA_DB.AT_${hiveconf:CAMPAIGN_VERSION}_DM;
CREATE TABLE SSHARMA_DB.AT_${hiveconf:CAMPAIGN_VERSION}_DM AS SELECT 
A.*, B.GROSS_SALES_AMT, B.DISCOUNT_AMT, B.TOT_PRD_CST_AMT, B.ITEM_QTY,
B.NET_SALES_AMT, B.NUM_TXNS, B.AVG_ORD_SZ, coalesce(B.RESPONDER,0) as responder
FROM SSHARMA_DB.MAILED_${hiveconf:CAMPAIGN_VERSION} A
LEFT OUTER JOIN (SELECT C.*,(CASE
WHEN C.CUSTOMER_KEY>0 THEN 1
ELSE 0
END) AS RESPONDER FROM ssharma_db.SHOPPERS_${hiveconf:CAMPAIGN_VERSION}_GRP_3 C) B
ON A.CUSTOMER_KEY=B.CUSTOMER_KEY;

DROP TABLE IF EXISTS SSHARMA_DB.AT_${hiveconf:CAMPAIGN_VERSION}_RESPONSE_GRP_ONL;
CREATE TABLE SSHARMA_DB.AT_${hiveconf:CAMPAIGN_VERSION}_RESPONSE_GRP_ONL 
STORED AS ORC AS SELECT
T1.*,
CASE WHEN T3.NUM_TXNS_ONL > 0 THEN 1 ELSE 0 END AS ONL_RESPONDER,
T3.NUM_TXNS_ONL,
T3.ITEM_QTY_ONL,
T3.GROSS_SALES_AMT_ONL,
T3.DISCOUNT_AMT_ONL,
T3.TOT_PRD_CST_AMT_ONL,
T3.NET_SALES_AMT_ONL,
T3.NET_MARGIN_ONL
FROM
SSHARMA_DB.MAILED_${hiveconf:CAMPAIGN_VERSION} T1
LEFT OUTER JOIN
(
SELECT
CUSTOMER_KEY,
DISTINCT_ORDER_NUM AS NUM_TXNS_ONL,
ITEM_QTY AS ITEM_QTY_ONL,
GROSS_SALES_AMT AS GROSS_SALES_AMT_ONL,
DISCOUNT_AMT AS DISCOUNT_AMT_ONL,
TOT_PRD_CST_AMT AS TOT_PRD_CST_AMT_ONL,
NVL(GROSS_SALES_AMT, 0) + NVL(DISCOUNT_AMT, 0) AS NET_SALES_AMT_ONL,
NVL(GROSS_SALES_AMT, 0) + NVL(DISCOUNT_AMT, 0) - NVL(TOT_PRD_CST_AMT, 0) AS NET_MARGIN_ONL
FROM
SSHARMA_DB.SHOPPERS_${hiveconf:CAMPAIGN_VERSION}_GRP_2 
WHERE
ORDER_STATUS = 'O' AND GROSS_SALES_AMT > 0  AND ITEM_QTY > 0
) T3
ON
T1.CUSTOMER_KEY = T3.CUSTOMER_KEY
;





DROP TABLE IF EXISTS SSHARMA_DB.AT_${hiveconf:CAMPAIGN_VERSION}_RESPONSE_GRP_RTL;
CREATE TABLE SSHARMA_DB.AT_${hiveconf:CAMPAIGN_VERSION}_RESPONSE_GRP_RTL 
STORED AS ORC AS SELECT
T1.*,
CASE WHEN T3.NUM_TXNS_RTL > 0 THEN 1 ELSE 0 END AS RTL_RESPONDER,
T3.NUM_TXNS_RTL,
T3.ITEM_QTY_RTL,
T3.GROSS_SALES_AMT_RTL,
T3.DISCOUNT_AMT_RTL,
T3.TOT_PRD_CST_AMT_RTL,
T3.NET_SALES_AMT_RTL,
T3.NET_MARGIN_RTL
FROM
SSHARMA_DB.MAILED_${hiveconf:CAMPAIGN_VERSION} T1
LEFT OUTER JOIN
(
SELECT
CUSTOMER_KEY,
DISTINCT_TRANSACTION_NUM AS NUM_TXNS_RTL,
ITEM_QTY AS ITEM_QTY_RTL,
GROSS_SALES_AMT AS GROSS_SALES_AMT_RTL,
DISCOUNT_AMT AS DISCOUNT_AMT_RTL,
TOT_PRD_CST_AMT AS TOT_PRD_CST_AMT_RTL,
NVL(GROSS_SALES_AMT, 0) + NVL(DISCOUNT_AMT, 0) AS NET_SALES_AMT_RTL,
NVL(GROSS_SALES_AMT, 0) + NVL(DISCOUNT_AMT, 0) - NVL(TOT_PRD_CST_AMT, 0) AS NET_MARGIN_RTL
FROM
SSHARMA_DB.SHOPPERS_${hiveconf:CAMPAIGN_VERSION}_GRP_2 
WHERE
ORDER_STATUS = 'R' AND GROSS_SALES_AMT > 0  AND ITEM_QTY > 0
) T3
ON
T1.CUSTOMER_KEY = T3.CUSTOMER_KEY
;









-- PREVIOUS 1 YEAR VARIABLES :

DROP TABLE IF EXISTS SSHARMA_DB.AT_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_1;
CREATE TABLE SSHARMA_DB.AT_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_1 
STORED AS ORC 
AS SELECT 
T2.CUSTOMER_KEY,
(
CASE
WHEN T1.ORDER_STATUS = 'R' THEN T1.SHIP_DATE
ELSE TO_DATE(T1.DEMAND_DATE)
END
) AS ORDER_DATE,
T1.ORDER_STATUS, 
T1.TRANSACTION_TYPE_CD,
T1.TRANSACTION_NUM,
T1.ORDER_NUM,
T1.DEMAND_DATE,
T1.SHIP_DATE,
T1.BRAND,
T1.COUNTRY,
T1.PRIMARY_TENDER_TYPE
FROM 
SSHARMA_DB.MAILED_${hiveconf:CAMPAIGN_VERSION} T2 
LEFT OUTER JOIN
MDS_NEW.ODS_ORDERHEADER_T T1 
ON 
T1.CUSTOMER_KEY = T2.CUSTOMER_KEY
WHERE
T1.COUNTRY='US' AND
(
(UNIX_TIMESTAMP(T1.SHIP_DATE,'yyyy-MM-dd') BETWEEN 
 UNIX_TIMESTAMP(DATE_SUB(T2.START_DT, 45 + 365), 'yyyy-MM-dd')  AND 
 UNIX_TIMESTAMP(DATE_SUB(T2.START_DT, 45), 'yyyy-MM-dd')  AND 
 T1.ORDER_STATUS = 'R'
) OR
(UNIX_TIMESTAMP(T1.DEMAND_DATE, 'yyyy-MM-dd_HH-mm-ss_Z') BETWEEN
 UNIX_TIMESTAMP(DATE_SUB(T2.START_DT, 45 + 365), 'yyyy-MM-dd')  AND 
 UNIX_TIMESTAMP(DATE_SUB(T2.START_DT, 45), 'yyyy-MM-dd')  AND 
 T1.ORDER_STATUS = 'O'
));


DROP TABLE IF EXISTS SSHARMA_DB.AT_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_2;
CREATE TABLE SSHARMA_DB.AT_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_2
STORED AS ORC 
AS SELECT
T1.*,
T2.LINE_NUM,
T2.ITEM_QTY,
T2.SALES_AMT,
T3.DISCOUNT_AMT,
T2.TOT_PRD_CST_AMT,
(
CASE
WHEN T2.ON_SALE_FLAG='Y' THEN 1
ELSE NULL
END
) AS ONSALE_IND,
T2.PRODUCT_KEY
FROM
SSHARMA_DB.AT_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_1 T1
INNER JOIN
MDS_NEW.ODS_ORDERLINE_T T2
ON
T1.TRANSACTION_NUM = T2.TRANSACTION_NUM
LEFT OUTER JOIN
(
SELECT 
TRANSACTION_NUM, LINE_NUM, SUM(DISCOUNT_AMT) AS DISCOUNT_AMT
FROM
MDS_NEW.ODS_ORDERLINE_DISCOUNTS_T
GROUP BY TRANSACTION_NUM, LINE_NUM
) T3
ON
T2.TRANSACTION_NUM = T3.TRANSACTION_NUM AND
T2.LINE_NUM = T3.LINE_NUM;



DROP TABLE IF EXISTS SSHARMA_DB.AT_${hiveconf:CAMPAIGN_VERSION}_DATERANGE;
CREATE TABLE SSHARMA_DB.AT_${hiveconf:CAMPAIGN_VERSION}_DATERANGE
STORED AS ORC 
AS SELECT
MAX(TO_DATE(ORDER_DATE)) AS MAXDATE, MIN(TO_DATE(ORDER_DATE)) AS MINDATE
FROM 
SSHARMA_DB.AT_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_2;


DROP TABLE IF EXISTS SSHARMA_DB.AT_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_3;
CREATE TABLE SSHARMA_DB.AT_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_3 
STORED AS ORC 
AS SELECT
T1.CUSTOMER_KEY, 
T1.TRANSACTION_NUM,
T1.ORDER_NUM,
T1.SHIP_DATE, 
T1.DEMAND_DATE, 
T1.BRAND, 
T1.COUNTRY, 
T1.ORDER_STATUS, 
T1.TRANSACTION_TYPE_CD, 
T1.PRIMARY_TENDER_TYPE, 
T1.ITEM_QTY, 
T1.SALES_AMT AS GROSS_SALES_AMT, 
T1.DISCOUNT_AMT, 
T1.TOT_PRD_CST_AMT, 
T1.ORDER_DATE,
T1.PRODUCT_KEY,
T1.ONSALE_IND,
T1.LINE_NUM,
(CASE
WHEN T1.ORDER_STATUS = 'O' THEN 1
ELSE NULL
END) AS FLAG_ONL,
(CASE
WHEN T1.ORDER_STATUS = 'R' THEN 1
ELSE NULL
END) AS FLAG_RTL,
(CASE
WHEN UNIX_TIMESTAMP(T1.ORDER_DATE, 'yyyy-MM-dd') >= UNIX_TIMESTAMP(DATE_SUB(T2.MAXDATE, 365), 'yyyy-MM-dd') AND 
T1.ORDER_STATUS = 'O' THEN ORDER_NUM
ELSE NULL
END) AS ORDER_NUM_12MO, 
(CASE
WHEN UNIX_TIMESTAMP(T1.ORDER_DATE, 'yyyy-MM-dd') >= UNIX_TIMESTAMP(DATE_SUB(T2.MAXDATE, 183), 'yyyy-MM-dd')  AND 
T1.ORDER_STATUS = 'O' THEN ORDER_NUM
ELSE NULL
END) AS ORDER_NUM_6MO, 
(CASE
WHEN UNIX_TIMESTAMP(T1.ORDER_DATE, 'yyyy-MM-dd') >= UNIX_TIMESTAMP(DATE_SUB(T2.MAXDATE, 365), 'yyyy-MM-dd')  AND 
T1.ORDER_STATUS = 'O' AND 
T1.PRIMARY_TENDER_TYPE IN ('BR','GP','ON','VB','VG','VO','VA','AT') THEN ORDER_NUM
ELSE NULL
END) AS ORDER_NUM_PLCC_12MO,
(CASE
WHEN UNIX_TIMESTAMP(T1.ORDER_DATE, 'yyyy-MM-dd') >= UNIX_TIMESTAMP(DATE_SUB(T2.MAXDATE, 183), 'yyyy-MM-dd')  AND 
T1.ORDER_STATUS = 'O' AND 
T1.PRIMARY_TENDER_TYPE IN ('BR','GP','ON','VB','VG','VO','VA','AT') THEN ORDER_NUM
ELSE NULL
END) AS ORDER_NUM_PLCC_6MO,
(CASE
WHEN UNIX_TIMESTAMP(T1.ORDER_DATE, 'yyyy-MM-dd') >= UNIX_TIMESTAMP(DATE_SUB(T2.MAXDATE, 365), 'yyyy-MM-dd')  THEN 1
ELSE NULL
END) AS FLAG_12MO,
(CASE
WHEN UNIX_TIMESTAMP(T1.ORDER_DATE, 'yyyy-MM-dd') >= UNIX_TIMESTAMP(DATE_SUB(T2.MAXDATE, 183), 'yyyy-MM-dd')  THEN 1
ELSE NULL
END) AS FLAG_6MO,
(CASE 
WHEN T1.PRIMARY_TENDER_TYPE IN ('BR','GP','ON','VB','VG','VO','VA','AT') THEN 1
ELSE NULL
END) AS PLCC_TXN,
(CASE 
WHEN T1.BRAND = 'GP' THEN 1
ELSE 0
END) AS GP_FLAG,
(CASE 
WHEN T1.BRAND = 'BR' THEN 1
ELSE 0
END) AS BR_FLAG,
(CASE 
WHEN T1.BRAND = 'ON' THEN 1
ELSE 0
END) AS ON_FLAG,
(CASE 
WHEN T1.BRAND = 'AT' THEN 1
ELSE 0
END) AS AT_FLAG,
(CASE 
WHEN T1.BRAND = 'BF' THEN 1
ELSE 0
END) AS BF_FLAG,
(CASE 
WHEN T1.BRAND = 'GO' THEN 1
ELSE 0
END) AS GO_FLAG
FROM SSHARMA_DB.AT_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_2 T1
INNER JOIN SSHARMA_DB.AT_${hiveconf:CAMPAIGN_VERSION}_DATERANGE T2;	




DROP TABLE IF EXISTS SSHARMA_DB.AT_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_4;
CREATE TABLE SSHARMA_DB.AT_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_4
STORED AS ORC 
AS SELECT       
T1.*, T2.STYLE_COLOR_CD,
(
CASE 
WHEN T1.BRAND = 'BR' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'ACCESSORIES') > 0 THEN 'ACC'
WHEN T1.BRAND = 'BR' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'WOMEN') > 0 THEN 'WOMENS'
WHEN T1.BRAND = 'BR' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'MEN') > 0 THEN 'MENS'
WHEN T1.BRAND = 'BR' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'SHOE') > 0 THEN 'SHOES'
WHEN T1.BRAND = 'BR' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'PETITE') > 0 THEN 'PET'
WHEN T1.BRAND = 'GP' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'ACCESS') > 0 THEN 'ACC'
WHEN T1.BRAND = 'GP' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'BABY') > 0 THEN 'BABY'
WHEN T1.BRAND = 'GP' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'BODY') > 0 THEN 'BODY'
WHEN T1.BRAND = 'GP' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'BOY') > 0 THEN 'BOYS'
WHEN T1.BRAND = 'GP' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'GAP1969') > 0 THEN 'GAP1969'
WHEN T1.BRAND = 'GP' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'WOMEN') > 0 THEN 'WOMENS'
WHEN T1.BRAND = 'GP' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'MEN') > 0 THEN 'MENS'
WHEN T1.BRAND = 'GP' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'GIRL') > 0 THEN 'GIRLS'
WHEN T1.BRAND = 'GP' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'KID') > 0 THEN 'KIDS'
WHEN T1.BRAND = 'GP' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'MATERNITY') > 0 THEN 'MAT'
WHEN T1.BRAND = 'ON' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'ACCESS') > 0 THEN 'ACC'
WHEN T1.BRAND = 'ON' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'ACESS') >0 THEN 'ACC'
WHEN T1.BRAND = 'ON' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'BABY') > 0 THEN 'BABY'
WHEN T1.BRAND = 'ON' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'BOY') > 0 THEN 'BOYS'
WHEN T1.BRAND = 'ON' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'PLUS') > 0 THEN 'PLUSSZ'
WHEN T1.BRAND = 'ON' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'WOMEN') > 0 THEN 'WOMENS'
WHEN T1.BRAND = 'ON' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'PETITE') > 0 THEN 'PET'
WHEN T1.BRAND = 'ON' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'MEN') > 0 THEN 'MENS'
WHEN T1.BRAND = 'ON' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'GIRL') > 0 THEN 'GIRLS'
WHEN T1.BRAND = 'ON' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'KID') > 0 THEN 'KIDS'
WHEN T1.BRAND = 'ON' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'MATERNITY') > 0 THEN 'MAT'
WHEN T1.BRAND = 'AT' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'WOMEN') > 0 THEN 'WOMENS'
WHEN T1.BRAND = 'AT' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'GIRL') > 0 THEN 'GIRLS'
ELSE 'MISC'
END 
) AS MDSE_DIV_DESC
FROM 
SSHARMA_DB.AT_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_3 T1
LEFT OUTER JOIN
(
SELECT DISTINCT
PRODUCT_KEY, STYLE_COLOR_CD, MDSE_DIV_DESC
FROM
MDS_NEW.ODS_PRODUCT_T
) T2
ON
T1.PRODUCT_KEY = T2.PRODUCT_KEY
;

DROP TABLE IF EXISTS SSHARMA_DB.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_1;
CREATE TABLE SSHARMA_DB.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_1 
STORED AS ORC 
AS SELECT 
CUSTOMER_KEY,
NVL(SUM(GROSS_SALES_AMT*FLAG_6MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_6MO),0) AS NET_SALES_AMT_6MO_SLS,
NVL(SUM(GROSS_SALES_AMT*FLAG_12MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_12MO),0) AS NET_SALES_AMT_12MO_SLS,
NVL(SUM(GROSS_SALES_AMT*FLAG_6MO*PLCC_TXN),0) + NVL(SUM(DISCOUNT_AMT*FLAG_6MO*PLCC_TXN),0) AS NET_SALES_AMT_PLCC_6MO_SLS,
NVL(SUM(GROSS_SALES_AMT*FLAG_12MO*PLCC_TXN),0) + NVL(SUM(DISCOUNT_AMT*FLAG_12MO*PLCC_TXN),0) AS NET_SALES_AMT_PLCC_12MO_SLS,
SUM(DISCOUNT_AMT*FLAG_6MO) AS DISCOUNT_AMT_6MO_SLS, 
SUM(DISCOUNT_AMT*FLAG_12MO) AS DISCOUNT_AMT_12MO_SLS, 
NVL(SUM(GROSS_SALES_AMT*FLAG_6MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_6MO),0) - NVL(SUM(TOT_PRD_CST_AMT*FLAG_6MO),0)AS NET_MARGIN_6MO_SLS,
NVL(SUM(GROSS_SALES_AMT*FLAG_12MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_12MO),0) - NVL(SUM(TOT_PRD_CST_AMT*FLAG_12MO),0)AS NET_MARGIN_12MO_SLS,
SUM(ITEM_QTY*FLAG_6MO) AS ITEM_QTY_6MO_SLS,
SUM(ITEM_QTY*FLAG_12MO) AS ITEM_QTY_12MO_SLS,
SUM(ITEM_QTY*FLAG_6MO*ONSALE_IND) AS ITEM_QTY_ONSALE_6MO_SLS,
SUM(ITEM_QTY*FLAG_12MO*ONSALE_IND) AS ITEM_QTY_ONSALE_12MO_SLS,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_6MO*FLAG_RTL)) +  COUNT(DISTINCT (ORDER_NUM_6MO)) AS NUM_TXNS_6MO_SLS,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_12MO*FLAG_RTL)) +  COUNT(DISTINCT (ORDER_NUM_12MO)) AS NUM_TXNS_12MO_SLS,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_6MO*FLAG_RTL*PLCC_TXN)) + COUNT(DISTINCT (ORDER_NUM_PLCC_6MO)) AS NUM_TXNS_PLCC_6MO_SLS,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_12MO*FLAG_RTL*PLCC_TXN)) + COUNT(DISTINCT (ORDER_NUM_PLCC_12MO)) AS NUM_TXNS_PLCC_12MO_SLS
FROM SSHARMA_DB.AT_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_4
WHERE BRAND='AT' AND GROSS_SALES_AMT > 0 AND ITEM_QTY > 0
GROUP BY CUSTOMER_KEY;

DROP TABLE IF EXISTS SSHARMA_DB.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_2;
CREATE TABLE SSHARMA_DB.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_2
STORED AS ORC 
AS SELECT 
CUSTOMER_KEY,
NVL(SUM(GROSS_SALES_AMT*FLAG_6MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_6MO),0) AS NET_SALES_AMT_6MO_SLS_RTL,
NVL(SUM(GROSS_SALES_AMT*FLAG_12MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_12MO),0) AS NET_SALES_AMT_12MO_SLS_RTL,
NVL(SUM(GROSS_SALES_AMT*FLAG_6MO*PLCC_TXN),0) + NVL(SUM(DISCOUNT_AMT*FLAG_6MO*PLCC_TXN),0) AS NET_SALES_AMT_PLCC_6MO_SLS_RTL,
NVL(SUM(GROSS_SALES_AMT*FLAG_12MO*PLCC_TXN),0) + NVL(SUM(DISCOUNT_AMT*FLAG_12MO*PLCC_TXN),0) AS NET_SALES_AMT_PLCC_12MO_SLS_RTL,
SUM(DISCOUNT_AMT*FLAG_6MO) AS DISCOUNT_AMT_6MO_SLS_RTL, 
SUM(DISCOUNT_AMT*FLAG_12MO) AS DISCOUNT_AMT_12MO_SLS_RTL, 
NVL(SUM(GROSS_SALES_AMT*FLAG_6MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_6MO),0) - NVL(SUM(TOT_PRD_CST_AMT*FLAG_6MO),0)AS NET_MARGIN_6MO_SLS_RTL,
NVL(SUM(GROSS_SALES_AMT*FLAG_12MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_12MO),0) - NVL(SUM(TOT_PRD_CST_AMT*FLAG_12MO),0)AS NET_MARGIN_12MO_SLS_RTL,
SUM(ITEM_QTY*FLAG_6MO) AS ITEM_QTY_6MO_SLS_RTL,
SUM(ITEM_QTY*FLAG_12MO) AS ITEM_QTY_12MO_SLS_RTL,
SUM(ITEM_QTY*FLAG_6MO*ONSALE_IND) AS ITEM_QTY_ONSALE_6MO_SLS_RTL,
SUM(ITEM_QTY*FLAG_12MO*ONSALE_IND) AS ITEM_QTY_ONSALE_12MO_SLS_RTL,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_6MO)) AS NUM_TXNS_6MO_SLS_RTL,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_12MO)) AS NUM_TXNS_12MO_SLS_RTL,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_6MO*PLCC_TXN)) AS NUM_TXNS_PLCC_6MO_SLS_RTL,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_12MO*PLCC_TXN)) AS NUM_TXNS_PLCC_12MO_SLS_RTL
FROM SSHARMA_DB.AT_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_4
WHERE BRAND='AT' AND GROSS_SALES_AMT > 0 AND ITEM_QTY > 0 AND FLAG_RTL = 1
GROUP BY CUSTOMER_KEY;

DROP TABLE IF EXISTS SSHARMA_DB.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_3;
CREATE TABLE SSHARMA_DB.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_3
STORED AS ORC 
AS SELECT 
CUSTOMER_KEY,
NVL(SUM(GROSS_SALES_AMT*FLAG_6MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_6MO),0) AS NET_SALES_AMT_6MO_SLS_ONL,
NVL(SUM(GROSS_SALES_AMT*FLAG_12MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_12MO),0) AS NET_SALES_AMT_12MO_SLS_ONL,
NVL(SUM(GROSS_SALES_AMT*FLAG_6MO*PLCC_TXN),0) + NVL(SUM(DISCOUNT_AMT*FLAG_6MO*PLCC_TXN),0) AS NET_SALES_AMT_PLCC_6MO_SLS_ONL,
NVL(SUM(GROSS_SALES_AMT*FLAG_12MO*PLCC_TXN),0) + NVL(SUM(DISCOUNT_AMT*FLAG_12MO*PLCC_TXN),0) AS NET_SALES_AMT_PLCC_12MO_SLS_ONL,
SUM(DISCOUNT_AMT*FLAG_6MO) AS DISCOUNT_AMT_6MO_SLS_ONL, 
SUM(DISCOUNT_AMT*FLAG_12MO) AS DISCOUNT_AMT_12MO_SLS_ONL, 
NVL(SUM(GROSS_SALES_AMT*FLAG_6MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_6MO),0) - NVL(SUM(TOT_PRD_CST_AMT*FLAG_6MO),0)AS NET_MARGIN_6MO_SLS_ONL,
NVL(SUM(GROSS_SALES_AMT*FLAG_12MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_12MO),0) - NVL(SUM(TOT_PRD_CST_AMT*FLAG_12MO),0)AS NET_MARGIN_12MO_SLS_ONL,
SUM(ITEM_QTY*FLAG_6MO) AS ITEM_QTY_6MO_SLS_ONL,
SUM(ITEM_QTY*FLAG_12MO) AS ITEM_QTY_12MO_SLS_ONL,
SUM(ITEM_QTY*FLAG_6MO*ONSALE_IND) AS ITEM_QTY_ONSALE_6MO_SLS_ONL,
SUM(ITEM_QTY*FLAG_12MO*ONSALE_IND) AS ITEM_QTY_ONSALE_12MO_SLS_ONL,
COUNT(DISTINCT (ORDER_NUM_6MO)) AS NUM_TXNS_6MO_SLS_ONL,
COUNT(DISTINCT (ORDER_NUM_12MO)) AS NUM_TXNS_12MO_SLS_ONL,
COUNT(DISTINCT (ORDER_NUM_PLCC_6MO)) AS NUM_TXNS_PLCC_6MO_SLS_ONL,
COUNT(DISTINCT (ORDER_NUM_PLCC_12MO)) AS NUM_TXNS_PLCC_12MO_SLS_ONL
FROM SSHARMA_DB.AT_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_4
WHERE BRAND='AT' AND GROSS_SALES_AMT > 0 AND ITEM_QTY > 0 AND FLAG_ONL = 1
GROUP BY CUSTOMER_KEY;

DROP TABLE IF EXISTS SSHARMA_DB.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_4;
CREATE TABLE SSHARMA_DB.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_4
STORED AS ORC 
AS SELECT 
CUSTOMER_KEY,
-(NVL(SUM(GROSS_SALES_AMT*FLAG_6MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_6MO),0)) AS NET_SALES_AMT_6MO_RTN,
-(NVL(SUM(GROSS_SALES_AMT*FLAG_12MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_12MO),0)) AS NET_SALES_AMT_12MO_RTN,
-(NVL(SUM(GROSS_SALES_AMT*FLAG_6MO*FLAG_RTL),0) + NVL(SUM(DISCOUNT_AMT*FLAG_6MO*FLAG_RTL),0)) AS NET_SALES_AMT_6MO_RTN_RTL,
-(NVL(SUM(GROSS_SALES_AMT*FLAG_12MO*FLAG_RTL),0) + NVL(SUM(DISCOUNT_AMT*FLAG_12MO*FLAG_RTL),0)) AS NET_SALES_AMT_12MO_RTN_RTL,
-(NVL(SUM(GROSS_SALES_AMT*FLAG_6MO*FLAG_ONL),0) + NVL(SUM(DISCOUNT_AMT*FLAG_6MO*FLAG_ONL),0)) AS NET_SALES_AMT_6MO_RTN_ONL,
-(NVL(SUM(GROSS_SALES_AMT*FLAG_12MO*FLAG_ONL),0) + NVL(SUM(DISCOUNT_AMT*FLAG_12MO*FLAG_ONL),0)) AS NET_SALES_AMT_12MO_RTN_ONL,
-(SUM(ITEM_QTY*FLAG_6MO)) AS ITEM_QTY_6MO_RTN,
-(SUM(ITEM_QTY*FLAG_12MO)) AS ITEM_QTY_12MO_RTN,
-(SUM(ITEM_QTY*FLAG_6MO*FLAG_RTL)) AS ITEM_QTY_6MO_RTN_RTL,
-(SUM(ITEM_QTY*FLAG_12MO*FLAG_RTL)) AS ITEM_QTY_12MO_RTN_RTL,
-(SUM(ITEM_QTY*FLAG_6MO*FLAG_ONL)) AS ITEM_QTY_6MO_RTN_ONL,
-(SUM(ITEM_QTY*FLAG_12MO*FLAG_ONL)) AS ITEM_QTY_12MO_RTN_ONL,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_6MO*FLAG_RTL)) +  COUNT(DISTINCT (ORDER_NUM_6MO)) AS NUM_TXNS_6MO_RTN,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_12MO*FLAG_RTL)) +  COUNT(DISTINCT (ORDER_NUM_12MO)) AS NUM_TXNS_12MO_RTN,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_6MO*FLAG_RTL)) AS NUM_TXNS_6MO_RTN_RTL,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_12MO*FLAG_RTL)) AS NUM_TXNS_12MO_RTN_RTL,
COUNT(DISTINCT (ORDER_NUM_6MO)) AS NUM_TXNS_6MO_RTN_ONL,
COUNT(DISTINCT (ORDER_NUM_12MO)) AS NUM_TXNS_12MO_RTN_ONL
FROM SSHARMA_DB.AT_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_4
WHERE BRAND='AT' AND GROSS_SALES_AMT < 0 AND ITEM_QTY < 0
GROUP BY CUSTOMER_KEY;

DROP TABLE IF EXISTS SSHARMA_DB.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_5;
CREATE TABLE SSHARMA_DB.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_5
STORED AS ORC  
AS SELECT
CUSTOMER_KEY,       
NVL(SUM(GROSS_SALES_AMT*FLAG_6MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_6MO),0) AS NET_SALES_AMT_6MO_SLS_CP,
NVL(SUM(GROSS_SALES_AMT*FLAG_12MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_12MO),0) AS NET_SALES_AMT_12MO_SLS_CP,
NVL(SUM(GROSS_SALES_AMT*FLAG_6MO*PLCC_TXN),0) + NVL(SUM(DISCOUNT_AMT*FLAG_6MO*PLCC_TXN),0) AS NET_SALES_AMT_PLCC_6MO_SLS_CP,
NVL(SUM(GROSS_SALES_AMT*FLAG_12MO*PLCC_TXN),0) + NVL(SUM(DISCOUNT_AMT*FLAG_12MO*PLCC_TXN),0) AS NET_SALES_AMT_PLCC_12MO_SLS_CP,
SUM(ITEM_QTY*FLAG_6MO) AS ITEM_QTY_6MO_SLS_CP,
SUM(ITEM_QTY*FLAG_12MO) AS ITEM_QTY_12MO_SLS_CP,
SUM(ITEM_QTY*FLAG_6MO*ONSALE_IND) AS ITEM_QTY_ONSALE_6MO_SLS_CP,
SUM(ITEM_QTY*FLAG_12MO*ONSALE_IND) AS ITEM_QTY_ONSALE_12MO_SLS_CP,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_6MO*FLAG_RTL)) +  COUNT(DISTINCT (ORDER_NUM_6MO)) AS NUM_TXNS_6MO_SLS_CP,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_12MO*FLAG_RTL)) +  COUNT(DISTINCT (ORDER_NUM_12MO)) AS NUM_TXNS_12MO_SLS_CP,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_6MO*FLAG_RTL*PLCC_TXN)) + COUNT(DISTINCT (ORDER_NUM_PLCC_6MO)) AS NUM_TXNS_PLCC_6MO_SLS_CP,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_12MO*FLAG_RTL*PLCC_TXN)) + COUNT(DISTINCT (ORDER_NUM_PLCC_12MO)) AS NUM_TXNS_PLCC_12MO_SLS_CP
FROM SSHARMA_DB.AT_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_4
WHERE BRAND!='AT' AND GROSS_SALES_AMT > 0 AND ITEM_QTY > 0 
GROUP BY CUSTOMER_KEY;

DROP TABLE IF EXISTS ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_6;
CREATE TABLE ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_6
STORED AS ORC  
AS SELECT
CUSTOMER_KEY,       
NVL(SUM(GROSS_SALES_AMT*FLAG_6MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_6MO),0) AS NET_SALES_AMT_6MO_SLS_RTL_CP,
NVL(SUM(GROSS_SALES_AMT*FLAG_12MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_12MO),0) AS NET_SALES_AMT_12MO_SLS_RTL_CP,
NVL(SUM(GROSS_SALES_AMT*FLAG_6MO*PLCC_TXN),0) + NVL(SUM(DISCOUNT_AMT*FLAG_6MO*PLCC_TXN),0) AS NET_SALES_AMT_PLCC_6MO_SLS_RTL_CP,
NVL(SUM(GROSS_SALES_AMT*FLAG_12MO*PLCC_TXN),0) + NVL(SUM(DISCOUNT_AMT*FLAG_12MO*PLCC_TXN),0) AS NET_SALES_AMT_PLCC_12MO_SLS_RTL_CP,
SUM(ITEM_QTY*FLAG_6MO) AS ITEM_QTY_6MO_SLS_RTL_CP,
SUM(ITEM_QTY*FLAG_12MO) AS ITEM_QTY_12MO_SLS_RTL_CP,
SUM(ITEM_QTY*FLAG_6MO*ONSALE_IND) AS ITEM_QTY_ONSALE_6MO_SLS_RTL_CP,
SUM(ITEM_QTY*FLAG_12MO*ONSALE_IND) AS ITEM_QTY_ONSALE_12MO_SLS_RTL_CP,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_6MO)) AS NUM_TXNS_6MO_SLS_RTL_CP,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_12MO)) AS NUM_TXNS_12MO_SLS_RTL_CP,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_6MO*PLCC_TXN)) AS NUM_TXNS_PLCC_6MO_SLS_RTL_CP,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_12MO*PLCC_TXN)) AS NUM_TXNS_PLCC_12MO_SLS_RTL_CP
FROM ssharma_db.AT_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_4
WHERE BRAND!='AT' AND GROSS_SALES_AMT > 0 AND ITEM_QTY > 0 AND FLAG_RTL = 1
GROUP BY CUSTOMER_KEY;



DROP TABLE IF EXISTS ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_7;
CREATE TABLE ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_7
STORED AS ORC  
AS SELECT
CUSTOMER_KEY,       
NVL(SUM(GROSS_SALES_AMT*FLAG_6MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_6MO),0) AS NET_SALES_AMT_6MO_SLS_ONL_CP,
NVL(SUM(GROSS_SALES_AMT*FLAG_12MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_12MO),0) AS NET_SALES_AMT_12MO_SLS_ONL_CP,
NVL(SUM(GROSS_SALES_AMT*FLAG_6MO*PLCC_TXN),0) + NVL(SUM(DISCOUNT_AMT*FLAG_6MO*PLCC_TXN),0) AS NET_SALES_AMT_PLCC_6MO_SLS_ONL_CP,
NVL(SUM(GROSS_SALES_AMT*FLAG_12MO*PLCC_TXN),0) + NVL(SUM(DISCOUNT_AMT*FLAG_12MO*PLCC_TXN),0) AS NET_SALES_AMT_PLCC_12MO_SLS_ONL_CP,
SUM(ITEM_QTY*FLAG_6MO) AS ITEM_QTY_6MO_SLS_ONL_CP,
SUM(ITEM_QTY*FLAG_12MO) AS ITEM_QTY_12MO_SLS_ONL_CP,
SUM(ITEM_QTY*FLAG_6MO*ONSALE_IND) AS ITEM_QTY_ONSALE_6MO_SLS_ONL_CP,
SUM(ITEM_QTY*FLAG_12MO*ONSALE_IND) AS ITEM_QTY_ONSALE_12MO_SLS_ONL_CP,
COUNT(DISTINCT (ORDER_NUM_6MO)) AS NUM_TXNS_6MO_SLS_ONL_CP,
COUNT(DISTINCT (ORDER_NUM_12MO)) AS NUM_TXNS_12MO_SLS_ONL_CP,
COUNT(DISTINCT (ORDER_NUM_PLCC_6MO)) AS NUM_TXNS_PLCC_6MO_SLS_ONL_CP,
COUNT(DISTINCT (ORDER_NUM_PLCC_12MO)) AS NUM_TXNS_PLCC_12MO_SLS_ONL_CP
FROM ssharma_db.AT_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_4
WHERE BRAND!='AT' AND GROSS_SALES_AMT > 0 AND ITEM_QTY > 0 AND FLAG_ONL = 1
GROUP BY CUSTOMER_KEY;




DROP TABLE IF EXISTS ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_8;
CREATE TABLE ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_8
STORED AS ORC 
AS SELECT 
CUSTOMER_KEY,
-(NVL(SUM(GROSS_SALES_AMT*FLAG_6MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_6MO),0)) AS NET_SALES_AMT_6MO_RTN_CP,
-(NVL(SUM(GROSS_SALES_AMT*FLAG_12MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_12MO),0)) AS NET_SALES_AMT_12MO_RTN_CP,
-(NVL(SUM(GROSS_SALES_AMT*FLAG_6MO*FLAG_RTL),0) + NVL(SUM(DISCOUNT_AMT*FLAG_6MO*FLAG_RTL),0)) AS NET_SALES_AMT_6MO_RTN_CP_RTL,
-(NVL(SUM(GROSS_SALES_AMT*FLAG_12MO*FLAG_RTL),0) + NVL(SUM(DISCOUNT_AMT*FLAG_12MO*FLAG_RTL),0)) AS NET_SALES_AMT_12MO_RTN_CP_RTL,
-(NVL(SUM(GROSS_SALES_AMT*FLAG_6MO*FLAG_ONL),0) + NVL(SUM(DISCOUNT_AMT*FLAG_6MO*FLAG_ONL),0)) AS NET_SALES_AMT_6MO_RTN_CP_ONL,
-(NVL(SUM(GROSS_SALES_AMT*FLAG_12MO*FLAG_ONL),0) + NVL(SUM(DISCOUNT_AMT*FLAG_12MO*FLAG_ONL),0)) AS NET_SALES_AMT_12MO_RTN_CP_ONL,
-(SUM(ITEM_QTY*FLAG_6MO)) AS ITEM_QTY_6MO_RTN_CP,
-(SUM(ITEM_QTY*FLAG_12MO)) AS ITEM_QTY_12MO_RTN_CP,
-(SUM(ITEM_QTY*FLAG_6MO*FLAG_RTL)) AS ITEM_QTY_6MO_RTN_CP_RTL,
-(SUM(ITEM_QTY*FLAG_12MO*FLAG_RTL)) AS ITEM_QTY_12MO_RTN_CP_RTL,
-(SUM(ITEM_QTY*FLAG_6MO*FLAG_ONL)) AS ITEM_QTY_6MO_RTN_CP_ONL,
-(SUM(ITEM_QTY*FLAG_12MO*FLAG_ONL)) AS ITEM_QTY_12MO_RTN_CP_ONL,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_6MO*FLAG_RTL)) +  COUNT(DISTINCT (ORDER_NUM_6MO)) AS NUM_TXNS_6MO_RTN_CP,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_12MO*FLAG_RTL)) +  COUNT(DISTINCT (ORDER_NUM_12MO)) AS NUM_TXNS_12MO_RTN_CP,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_6MO*FLAG_RTL)) AS NUM_TXNS_6MO_RTN_CP_RTL,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_12MO*FLAG_RTL)) AS NUM_TXNS_12MO_RTN_CP_RTL,
COUNT(DISTINCT (ORDER_NUM_6MO)) AS NUM_TXNS_6MO_RTN_CP_ONL,
COUNT(DISTINCT (ORDER_NUM_12MO)) AS NUM_TXNS_12MO_RTN_CP_ONL
FROM ssharma_db.AT_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_4
WHERE BRAND!='AT' AND GROSS_SALES_AMT < 0 AND ITEM_QTY < 0
GROUP BY CUSTOMER_KEY;


DROP TABLE IF EXISTS ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_TEST1;
CREATE TABLE ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_TEST1 
STORED AS ORC 
AS SELECT 
T1.CUSTOMER_KEY,
T1.DIV_SHP,
T2.DIV_SHP_ONL,
T3.DIV_SHP_RTL
FROM
(
SELECT CUSTOMER_KEY, COUNT(DISTINCT MDSE_DIV_DESC) AS DIV_SHP
FROM 
ssharma_db.AT_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_4
WHERE BRAND = 'AT'
GROUP BY CUSTOMER_KEY
) T1
LEFT OUTER JOIN
(
SELECT CUSTOMER_KEY, COUNT(DISTINCT MDSE_DIV_DESC) AS DIV_SHP_ONL
FROM 
ssharma_db.AT_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_4
WHERE FLAG_ONL = 1 AND BRAND = 'AT'
GROUP BY CUSTOMER_KEY
) T2
ON
T1.CUSTOMER_KEY = T2.CUSTOMER_KEY
LEFT OUTER JOIN 
(
SELECT CUSTOMER_KEY, COUNT(DISTINCT MDSE_DIV_DESC) AS DIV_SHP_RTL
FROM 
ssharma_db.AT_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_4
WHERE FLAG_RTL = 1 AND BRAND = 'AT'
GROUP BY CUSTOMER_KEY
) T3
ON
T1.CUSTOMER_KEY = T3.CUSTOMER_KEY
;


DROP TABLE IF EXISTS ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_TEST2;
CREATE TABLE ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_TEST2
STORED AS ORC 
AS SELECT 
T1.CUSTOMER_KEY,
T1.DIV_SHP_CP,
T2.DIV_SHP_CP_ONL,
T3.DIV_SHP_CP_RTL
FROM
(
SELECT CUSTOMER_KEY, COUNT(DISTINCT MDSE_DIV_DESC) AS DIV_SHP_CP
FROM 
ssharma_db.AT_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_4
WHERE BRAND != 'AT'
GROUP BY CUSTOMER_KEY
) T1
LEFT OUTER JOIN
(
SELECT CUSTOMER_KEY, COUNT(DISTINCT MDSE_DIV_DESC) AS DIV_SHP_CP_ONL
FROM 
ssharma_db.AT_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_4
WHERE FLAG_ONL = 1 AND BRAND != 'AT'
GROUP BY CUSTOMER_KEY
) T2
ON
T1.CUSTOMER_KEY = T2.CUSTOMER_KEY
LEFT OUTER JOIN 
(
SELECT CUSTOMER_KEY, COUNT(DISTINCT MDSE_DIV_DESC) AS DIV_SHP_CP_RTL
FROM 
ssharma_db.AT_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_4
WHERE FLAG_RTL = 1 AND BRAND != 'AT'
GROUP BY CUSTOMER_KEY
) T3
ON
T1.CUSTOMER_KEY = T3.CUSTOMER_KEY
;



DROP TABLE IF EXISTS ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_DIV_SHP;
CREATE TABLE ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_DIV_SHP
STORED AS ORC 
AS SELECT 
T0.CUSTOMER_KEY,
T1.DIV_SHP,
T1.DIV_SHP_ONL,
T1.DIV_SHP_RTL,
T2.DIV_SHP_CP,
T2.DIV_SHP_CP_ONL,
T2.DIV_SHP_CP_RTL
FROM
(
SELECT DISTINCT CUSTOMER_KEY FROM ssharma_db.MAILED_${hiveconf:CAMPAIGN_VERSION}
) T0
LEFT OUTER JOIN
ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_TEST1 T1
ON
T0.CUSTOMER_KEY = T1.CUSTOMER_KEY
LEFT OUTER JOIN
ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_TEST2 T2
ON
T0.CUSTOMER_KEY = T2.CUSTOMER_KEY
;


DROP TABLE IF EXISTS ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_TEST1;
DROP TABLE IF EXISTS ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_TEST2;




DROP TABLE IF EXISTS ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_DAYS_LAST_PUR;
CREATE TABLE ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_DAYS_LAST_PUR 
STORED AS ORC 
AS SELECT 
T3.CUSTOMER_KEY, 
DATEDIFF(T2.MAXDATE, T3.LAST_PUR_DT_CP) AS DAYS_LAST_PUR_CP,
DATEDIFF(T2.MAXDATE, T3.LAST_PUR_DT_CP_RTL) AS DAYS_LAST_PUR_CP_RTL,
DATEDIFF(T2.MAXDATE, T3.LAST_PUR_DT_CP_ONL) AS DAYS_LAST_PUR_CP_ONL,
DATEDIFF(T2.MAXDATE, T4.LAST_PUR_DT) AS DAYS_LAST_PUR,
DATEDIFF(T2.MAXDATE, T4.LAST_PUR_DT_RTL) AS DAYS_LAST_PUR_RTL,
DATEDIFF(T2.MAXDATE, T4.LAST_PUR_DT_ONL) AS DAYS_LAST_PUR_ONL
FROM
(
SELECT T1.CUSTOMER_KEY, MAX(T1.ORDER_DATE) AS LAST_PUR_DT_CP,
TO_DATE(FROM_UNIXTIME(MAX(UNIX_TIMESTAMP(T1.ORDER_DATE, 'yyyy-MM-dd') * T1.FLAG_RTL))) AS LAST_PUR_DT_CP_RTL,
TO_DATE(FROM_UNIXTIME(MAX(UNIX_TIMESTAMP(T1.ORDER_DATE, 'yyyy-MM-dd') * T1.FLAG_ONL))) AS LAST_PUR_DT_CP_ONL
FROM ssharma_db.AT_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_4 T1 
WHERE 
GROSS_SALES_AMT > 0  AND ITEM_QTY > 0 AND
AT_FLAG!=1
GROUP BY T1.CUSTOMER_KEY
) T3
LEFT OUTER JOIN
(
SELECT T1.CUSTOMER_KEY, 
MAX(T1.ORDER_DATE) AS LAST_PUR_DT,
TO_DATE(FROM_UNIXTIME(MAX(UNIX_TIMESTAMP(T1.ORDER_DATE, 'yyyy-MM-dd') * T1.FLAG_RTL))) AS LAST_PUR_DT_RTL,
TO_DATE(FROM_UNIXTIME(MAX(UNIX_TIMESTAMP(T1.ORDER_DATE, 'yyyy-MM-dd') * T1.FLAG_ONL))) AS LAST_PUR_DT_ONL
FROM ssharma_db.AT_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_4 T1
WHERE 
GROSS_SALES_AMT > 0  AND ITEM_QTY > 0 AND
AT_FLAG=1
GROUP BY T1.CUSTOMER_KEY
) T4
ON
T3.CUSTOMER_KEY = T4.CUSTOMER_KEY
INNER JOIN
ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_DATERANGE T2
;




DROP TABLE IF EXISTS ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_DAYS_ON_BOOKS;
CREATE TABLE ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_DAYS_ON_BOOKS 
STORED AS ORC 
AS SELECT 
T4.CUSTOMER_KEY,
DATEDIFF(T5.MAXDATE, T4.ACQUISITION_DATE_CP) AS DAYS_ON_BOOKS_CP,
DATEDIFF(T5.MAXDATE, T4.ACQUISITION_DATE) AS DAYS_ON_BOOKS
FROM
(
SELECT
T1.CUSTOMER_KEY,
T2.ACQUISITION_DATE_CP,
T3.ACQUISITION_DATE
FROM
SSHARMA_DB.MAILED_${hiveconf:CAMPAIGN_VERSION} T1
LEFT OUTER JOIN
(
SELECT 
CUST_KEY AS CUSTOMER_KEY,
TO_DATE(MIN(ACQUISITION_DATE)) AS ACQUISITION_DATE_CP
FROM MDS_NEW.ODS_BRAND_CUSTOMER_T 
WHERE
BRAND != 'AT'
GROUP BY CUST_KEY
) T2
ON T1.CUSTOMER_KEY = T2.CUSTOMER_KEY
LEFT OUTER JOIN
(
SELECT 
CUST_KEY AS CUSTOMER_KEY,
TO_DATE(MIN(ACQUISITION_DATE)) AS ACQUISITION_DATE
FROM MDS_NEW.ODS_BRAND_CUSTOMER_T 
WHERE 
BRAND = 'AT'
GROUP BY CUST_KEY
) T3
ON T1.CUSTOMER_KEY = T3.CUSTOMER_KEY
) T4
INNER JOIN
ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_DATERANGE T5;





DROP TABLE IF EXISTS ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_TEST1;
DROP TABLE IF EXISTS ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_TEST2;




DROP TABLE IF EXISTS ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS_1;
CREATE TABLE ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS_1 
STORED AS ORC
AS SELECT
T1.CUSTOMER_KEY, T3.START_DT, T3.END_DT, T2.OPEN_DATE, 
T2.REISSUE_DATE, T2.BRAND, T2.PLATE_CODE,
T2.PLCC_DROPPED, T2.EST_CLOSED_DT, T2.CARD_TYP
FROM ssharma_db.MAILED_${hiveconf:CAMPAIGN_VERSION} T1
LEFT OUTER JOIN 
MDS_NEW.ODS_PLCC_CARDHOLDER_T T2
ON T1.CUSTOMER_KEY = T2.CUSTOMER_KEY
INNER JOIN
(
SELECT  START_DT, 
END_DT 
FROM SSHARMA_DB.START_END_${hiveconf:CAMPAIGN_VERSION}
) T3
WHERE 
TO_DATE(T2.OPEN_DATE) <= T3.START_DT AND 
(
TO_DATE(T2.EST_CLOSED_DT) IS NULL OR 
TO_DATE(T2.EST_CLOSED_DT) >= T3.START_DT
);


DROP TABLE IF EXISTS ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS_2;
CREATE TABLE ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS_2 
STORED AS ORC
AS SELECT
T1.CUSTOMER_KEY, T1.START_DT, T1.END_DT, T1.BRAND, T1.PLATE_CODE, T1.CARD_TYP,
MAX(T1.OPEN_DATE) AS OPEN_DATE, MAX(T1.REISSUE_DATE) AS REISSUE_DATE, MAX(T1.EST_CLOSED_DT) AS EST_CLOSED_DT
FROM ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS_1 T1 
GROUP BY T1.CUSTOMER_KEY, T1.START_DT, T1.END_DT, T1.BRAND, T1.PLATE_CODE, T1.CARD_TYP;



DROP TABLE IF EXISTS ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS_3;
CREATE TABLE ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS_3 
STORED AS ORC
AS SELECT
T1.CUSTOMER_KEY, T1.START_DT, T1.END_DT, T1.BRAND, T1.PLATE_CODE, T1.CARD_TYP,  
T1.OPEN_DATE, T1.REISSUE_DATE,  T1.EST_CLOSED_DT,
(CASE WHEN BRAND='AT' AND PLATE_CODE>4 THEN 1 ELSE 0 END) VISASIG_FLAG,
(CASE WHEN BRAND='AT' AND PLATE_CODE<4 THEN 1 ELSE 0 END) BASIC_FLAG,
(CASE WHEN BRAND='AT' AND PLATE_CODE=4 THEN 1 ELSE 0 END) SILVER_FLAG,
(CASE WHEN BRAND<>'AT' THEN 1 ELSE 0 END) SISTER_FLAG
FROM ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS_2 T1;


DROP TABLE IF EXISTS ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS_4;             
CREATE TABLE ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS_4 AS SELECT
CUSTOMER_KEY, 
MAX(VISASIG_FLAG) AS VISASIG_FLAG,
MAX(BASIC_FLAG) AS BASIC_FLAG,
MAX(SISTER_FLAG) AS SISTER_FLAG,
MAX(SILVER_FLAG) AS SILVER_FLAG
FROM ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS_3
GROUP BY CUSTOMER_KEY;


DROP TABLE IF EXISTS ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS_5; 
CREATE TABLE ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS_5 AS SELECT
T1.CUSTOMER_KEY, T2.VISASIG_FLAG, T2.BASIC_FLAG, T2.SILVER_FLAG, T2.SISTER_FLAG
FROM ssharma_db.MAILED_${hiveconf:CAMPAIGN_VERSION} T1
LEFT OUTER JOIN ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS_4 T2
ON T1.CUSTOMER_KEY=T2.CUSTOMER_KEY;


DROP TABLE IF EXISTS ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS;  
CREATE TABLE ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS AS SELECT
CUSTOMER_KEY, VISASIG_FLAG, BASIC_FLAG, SILVER_FLAG, SISTER_FLAG,
(
CASE 
WHEN VISASIG_FLAG = 1 THEN 1
WHEN SILVER_FLAG = 1 AND VISASIG_FLAG <> 1 THEN 2
WHEN BASIC_FLAG = 1 AND SILVER_FLAG <> 1 AND VISASIG_FLAG <> 1 THEN 3
WHEN SISTER_FLAG = 1 AND SILVER_FLAG <> 1 AND BASIC_FLAG <> 1 AND VISASIG_FLAG <> 1 THEN 4
ELSE 5
END
) AS CARD_STATUS
FROM ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS_5;


DROP TABLE IF EXISTS ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS_1;
DROP TABLE IF EXISTS ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS_2;
DROP TABLE IF EXISTS ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS_3;
DROP TABLE IF EXISTS ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS_4;
DROP TABLE IF EXISTS ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS_5; 







DROP TABLE IF EXISTS ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_TRANSACTIONS_1;
CREATE TABLE ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_TRANSACTIONS_1
STORED AS ORC 
AS SELECT
T0.*,
T1.NET_SALES_AMT_6MO_SLS,
T1.NET_SALES_AMT_12MO_SLS,
T1.NET_SALES_AMT_PLCC_6MO_SLS,
T1.NET_SALES_AMT_PLCC_12MO_SLS,
T1.DISCOUNT_AMT_6MO_SLS,
T1.DISCOUNT_AMT_12MO_SLS,
T1.NET_MARGIN_6MO_SLS,
T1.NET_MARGIN_12MO_SLS,
T1.ITEM_QTY_6MO_SLS,
T1.ITEM_QTY_12MO_SLS,
T1.ITEM_QTY_ONSALE_6MO_SLS,
T1.ITEM_QTY_ONSALE_12MO_SLS,
T1.NUM_TXNS_6MO_SLS,
T1.NUM_TXNS_12MO_SLS,
T1.NUM_TXNS_PLCC_6MO_SLS,
T1.NUM_TXNS_PLCC_12MO_SLS,
T2.NET_SALES_AMT_6MO_SLS_RTL,
T2.NET_SALES_AMT_12MO_SLS_RTL,
T2.NET_SALES_AMT_PLCC_6MO_SLS_RTL,
T2.NET_SALES_AMT_PLCC_12MO_SLS_RTL,
T2.DISCOUNT_AMT_6MO_SLS_RTL,
T2.DISCOUNT_AMT_12MO_SLS_RTL,
T2.NET_MARGIN_6MO_SLS_RTL,
T2.NET_MARGIN_12MO_SLS_RTL,
T2.ITEM_QTY_6MO_SLS_RTL,
T2.ITEM_QTY_12MO_SLS_RTL,
T2.ITEM_QTY_ONSALE_6MO_SLS_RTL,
T2.ITEM_QTY_ONSALE_12MO_SLS_RTL,
T2.NUM_TXNS_6MO_SLS_RTL,
T2.NUM_TXNS_12MO_SLS_RTL,
T2.NUM_TXNS_PLCC_6MO_SLS_RTL,
T2.NUM_TXNS_PLCC_12MO_SLS_RTL,
T3.NET_SALES_AMT_6MO_SLS_ONL,
T3.NET_SALES_AMT_12MO_SLS_ONL,
T3.NET_SALES_AMT_PLCC_6MO_SLS_ONL,
T3.NET_SALES_AMT_PLCC_12MO_SLS_ONL,
T3.DISCOUNT_AMT_6MO_SLS_ONL,
T3.DISCOUNT_AMT_12MO_SLS_ONL,
T3.NET_MARGIN_6MO_SLS_ONL,
T3.NET_MARGIN_12MO_SLS_ONL,
T3.ITEM_QTY_6MO_SLS_ONL,
T3.ITEM_QTY_12MO_SLS_ONL,
T3.ITEM_QTY_ONSALE_6MO_SLS_ONL,
T3.ITEM_QTY_ONSALE_12MO_SLS_ONL,
T3.NUM_TXNS_6MO_SLS_ONL,
T3.NUM_TXNS_12MO_SLS_ONL,
T3.NUM_TXNS_PLCC_6MO_SLS_ONL,
T3.NUM_TXNS_PLCC_12MO_SLS_ONL,
T4.NET_SALES_AMT_6MO_RTN,
T4.NET_SALES_AMT_12MO_RTN,
T4.NET_SALES_AMT_6MO_RTN_RTL,
T4.NET_SALES_AMT_12MO_RTN_RTL,
T4.NET_SALES_AMT_6MO_RTN_ONL,
T4.NET_SALES_AMT_12MO_RTN_ONL,
T4.ITEM_QTY_6MO_RTN,
T4.ITEM_QTY_12MO_RTN,
T4.ITEM_QTY_6MO_RTN_RTL,
T4.ITEM_QTY_12MO_RTN_RTL,
T4.ITEM_QTY_6MO_RTN_ONL,
T4.ITEM_QTY_12MO_RTN_ONL,
T4.NUM_TXNS_6MO_RTN,
T4.NUM_TXNS_12MO_RTN,
T4.NUM_TXNS_6MO_RTN_RTL,
T4.NUM_TXNS_12MO_RTN_RTL,
T4.NUM_TXNS_6MO_RTN_ONL,
T4.NUM_TXNS_12MO_RTN_ONL
FROM ssharma_db.MAILED_${hiveconf:CAMPAIGN_VERSION} T0
LEFT OUTER JOIN ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_1 T1
ON T0.CUSTOMER_KEY = T1.CUSTOMER_KEY
LEFT OUTER JOIN ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_2 T2
ON T0.CUSTOMER_KEY = T2.CUSTOMER_KEY
LEFT OUTER JOIN ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_3 T3
ON T0.CUSTOMER_KEY = T3.CUSTOMER_KEY
LEFT OUTER JOIN ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_4 T4 
ON T0.CUSTOMER_KEY = T4.CUSTOMER_KEY
;



DROP TABLE IF EXISTS ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_TRANSACTIONS_2;
CREATE TABLE ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_TRANSACTIONS_2 
STORED AS ORC
AS SELECT
T0.*,
T1.NET_SALES_AMT_6MO_SLS_CP,
T1.NET_SALES_AMT_12MO_SLS_CP,
T1.NET_SALES_AMT_PLCC_6MO_SLS_CP,
T1.NET_SALES_AMT_PLCC_12MO_SLS_CP,
T1.ITEM_QTY_6MO_SLS_CP,
T1.ITEM_QTY_12MO_SLS_CP,
T1.ITEM_QTY_ONSALE_6MO_SLS_CP,
T1.ITEM_QTY_ONSALE_12MO_SLS_CP,
T1.NUM_TXNS_6MO_SLS_CP,
T1.NUM_TXNS_12MO_SLS_CP,
T1.NUM_TXNS_PLCC_6MO_SLS_CP,
T1.NUM_TXNS_PLCC_12MO_SLS_CP,
T2.NET_SALES_AMT_6MO_SLS_RTL_CP,
T2.NET_SALES_AMT_12MO_SLS_RTL_CP,
T2.NET_SALES_AMT_PLCC_6MO_SLS_RTL_CP,
T2.NET_SALES_AMT_PLCC_12MO_SLS_RTL_CP,
T2.ITEM_QTY_6MO_SLS_RTL_CP,
T2.ITEM_QTY_12MO_SLS_RTL_CP,
T2.ITEM_QTY_ONSALE_6MO_SLS_RTL_CP,
T2.ITEM_QTY_ONSALE_12MO_SLS_RTL_CP,
T2.NUM_TXNS_6MO_SLS_RTL_CP,
T2.NUM_TXNS_12MO_SLS_RTL_CP,
T2.NUM_TXNS_PLCC_6MO_SLS_RTL_CP,
T2.NUM_TXNS_PLCC_12MO_SLS_RTL_CP,
T3.NET_SALES_AMT_6MO_SLS_ONL_CP,
T3.NET_SALES_AMT_12MO_SLS_ONL_CP,
T3.NET_SALES_AMT_PLCC_6MO_SLS_ONL_CP,
T3.NET_SALES_AMT_PLCC_12MO_SLS_ONL_CP,
T3.ITEM_QTY_6MO_SLS_ONL_CP,
T3.ITEM_QTY_12MO_SLS_ONL_CP,
T3.ITEM_QTY_ONSALE_6MO_SLS_ONL_CP,
T3.ITEM_QTY_ONSALE_12MO_SLS_ONL_CP,
T3.NUM_TXNS_6MO_SLS_ONL_CP,
T3.NUM_TXNS_12MO_SLS_ONL_CP,
T3.NUM_TXNS_PLCC_6MO_SLS_ONL_CP,
T3.NUM_TXNS_PLCC_12MO_SLS_ONL_CP,
T4.NET_SALES_AMT_6MO_RTN_CP,
T4.NET_SALES_AMT_12MO_RTN_CP,
T4.NET_SALES_AMT_6MO_RTN_CP_RTL,
T4.NET_SALES_AMT_12MO_RTN_CP_RTL,
T4.NET_SALES_AMT_6MO_RTN_CP_ONL,
T4.NET_SALES_AMT_12MO_RTN_CP_ONL,
T4.ITEM_QTY_6MO_RTN_CP,
T4.ITEM_QTY_12MO_RTN_CP,
T4.ITEM_QTY_6MO_RTN_CP_RTL,
T4.ITEM_QTY_12MO_RTN_CP_RTL,
T4.ITEM_QTY_6MO_RTN_CP_ONL,
T4.ITEM_QTY_12MO_RTN_CP_ONL,
T4.NUM_TXNS_6MO_RTN_CP,
T4.NUM_TXNS_12MO_RTN_CP,
T4.NUM_TXNS_6MO_RTN_CP_RTL,
T4.NUM_TXNS_12MO_RTN_CP_RTL,
T4.NUM_TXNS_6MO_RTN_CP_ONL,
T4.NUM_TXNS_12MO_RTN_CP_ONL
FROM
ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_TRANSACTIONS_1 T0
LEFT OUTER JOIN ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_5 T1 
ON T0.CUSTOMER_KEY = T1.CUSTOMER_KEY
LEFT OUTER JOIN ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_6 T2
ON T0.CUSTOMER_KEY = T2.CUSTOMER_KEY
LEFT OUTER JOIN ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_7 T3
ON T0.CUSTOMER_KEY = T3.CUSTOMER_KEY
LEFT OUTER JOIN ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_8 T4
ON T0.CUSTOMER_KEY = T4.CUSTOMER_KEY
;


drop table if exists SSHARMA_DB.at_${hiveconf:CAMPAIGN_VERSION}_testing1;
CREATE TABLE SSHARMA_DB.at_${hiveconf:CAMPAIGN_VERSION}_testing1 AS SELECT A.CUSTOMER_KEY, A.EVENT_TYPE, B.CELL_KEY, 
B.GAP_CELL_START_DATE AS START_DT, B.GAP_CELL_END_DATE AS END_DT,D.maxdate,A.brand
FROM (select * from MDS_NEW.ODS_MAILINGMAILHOUSE_T where EVENT_TYPE='M') A 
inner join 
MDS_NEW.ODS_CELL_T B 
on A.CELL_KEY = B.CELL_KEY
join SSHARMA_DB.AT_${hiveconf:CAMPAIGN_VERSION}_DATERANGE  D;

drop table if exists ssharma_db.at_${hiveconf:CAMPAIGN_VERSION}_test1;
create table ssharma_db.at_${hiveconf:CAMPAIGN_VERSION}_test1 as 
select x.customer_key,count(x.cell_key) as promotions_received_at from 
(select  customer_key,cell_key from SSHARMA_DB.at_${hiveconf:CAMPAIGN_VERSION}_testing1 where event_type='M'  AND BRAND='AT' and START_DT<=MAXDATE) x 
GROUP BY x.CUSTOMER_KEY ;


drop table if exists ssharma_db.at_${hiveconf:CAMPAIGN_VERSION}_test2;
create table ssharma_db.at_${hiveconf:CAMPAIGN_VERSION}_test2 as 
select x.customer_key,count(x.cell_key) as promotions_received_cp from 
(select  customer_key,cell_key from SSHARMA_DB.at_${hiveconf:CAMPAIGN_VERSION}_testing1 where event_type='M'  and START_DT<=MAXDATE) x 
GROUP BY x.CUSTOMER_KEY ;

drop table if exists SSHARMA_DB.AT_${hiveconf:CAMPAIGN_VERSION}_PROMO_RECEIVED;
CREATE TABLE SSHARMA_DB.AT_${hiveconf:CAMPAIGN_VERSION}_PROMO_RECEIVED AS SELECT
T1.CUSTOMER_KEY, T1.PROMOTIONS_RECEIVED_CP, T2.PROMOTIONS_RECEIVED_AT
FROM SSHARMA_DB.at_${hiveconf:CAMPAIGN_VERSION}_TEST2 T1
LEFT OUTER JOIN SSHARMA_DB.at_${hiveconf:CAMPAIGN_VERSION}_TEST1 T2
ON T1.CUSTOMER_KEY=T2.CUSTOMER_KEY
ORDER BY T1.CUSTOMER_KEY;

DROP TABLE SSHARMA_DB.AT_${hiveconf:CAMPAIGN_VERSION}_TEST1;
DROP TABLE SSHARMA_DB.AT_${hiveconf:CAMPAIGN_VERSION}_TEST2;
DROP TABLE SSHARMA_DB.AT_${hiveconf:CAMPAIGN_VERSION}_TESTING1;

drop table if exists ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_TEMPO;
create table ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_TEMPO AS
select T3.CELL_KEY,T5.GAP_CELL_START_DATE,T5.GAP_CELL_END_DATE, 
T3.CUSTOMER_KEY,T3.BRAND,T3.EVENT_TYPE from 
(select BRAND,EVENT_TYPE,CUSTOMER_KEY,CELL_KEY from mds_new.ODS_MAILINGMAILHOUSE_T where BRAND='AT' 
AND EVENT_TYPE='M' ) T3 
inner join 
SSHARMA_DB.MAILED_${hiveconf:CAMPAIGN_VERSION} T4 
ON T3.CUSTOMER_KEY=T4.CUSTOMER_KEY
inner join 
(select T6.CELL_KEY, T6.GAP_CELL_START_DATE, T6.GAP_CELL_END_DATE,T6.MINDATE,T6.MAXDATE from 
(SELECT T1.CELL_KEY, T1.GAP_CELL_START_DATE, T1.GAP_CELL_END_DATE,T2.MINDATE,T2.MAXDATE,
T1.CELL_KEY, T1.GAP_CELL_START_DATE, T1.GAP_CELL_END_DATE,T2.MINDATE,T2.MAXDATE
FROM mds_new.ODS_CELL_T T1 join  ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_DATERANGE T2) T6
WHERE T6.GAP_CELL_END_DATE>=T6.MINDATE 
AND T6.GAP_CELL_START_DATE<=T6.MAXDATE) T5
on T3.CELL_KEY=T5.CELL_KEY;


drop table if exists ssharma_db.at_${hiveconf:CAMPAIGN_VERSION}_TEMP;
CREATE TABLE ssharma_db.at_${hiveconf:CAMPAIGN_VERSION}_TEMP AS SELECT DISTINCT
CELL_KEY, GAP_CELL_START_DATE, GAP_CELL_END_DATE, 
CUSTOMER_KEY, BRAND, EVENT_TYPE
FROM 
ssharma_db.at_${hiveconf:CAMPAIGN_VERSION}_tempo 
ORDER BY CUSTOMER_KEY,CELL_KEY; 


 
drop table if exists ssharma_db.at_${hiveconf:CAMPAIGN_VERSION}_testing1;
create table ssharma_db.at_${hiveconf:CAMPAIGN_VERSION}_testing1 as 
select t2.customer_key,t1.cell_key,t1.gap_cell_start_date,t1.gap_cell_end_date,t2.order_date,t2.transaction_num,t2.flag_12mo,
t2.flag_rtl,t2.order_num_12mo,t2.gross_sales_amt,t2.discount_amt
from ssharma_db.at_txn_p365_${hiveconf:CAMPAIGN_VERSION}_3 t2
inner join 
ssharma_db.at_${hiveconf:CAMPAIGN_VERSION}_temp t1
on t1.customer_key  = t2.customer_key 
where t2.order_date>=t1.gap_cell_start_date and t2.order_date<=t1.gap_cell_end_date and t2.brand= 'AT' and t2.transaction_type_cd in ('S','M')

drop table if exists ssharma_db.at_${hiveconf:CAMPAIGN_VERSION}_test1;
create table ssharma_db.at_${hiveconf:CAMPAIGN_VERSION}_test1 as select 
CUSTOMER_KEY, CELL_KEY, GAP_CELL_START_DATE,GAP_CELL_END_DATE,
COUNT(DISTINCT ORDER_DATE) AS RESPONSES,
COUNT(DISTINCT(TRANSACTION_NUM*FLAG_12MO*FLAG_RTL))+COUNT(DISTINCT(ORDER_NUM_12MO)) AS NUM_TXNS_SLS_PROMO_12MO,
SUM(GROSS_SALES_AMT) AS GROSS_SALES_SLS_PROMO_12MO,
SUM(DISCOUNT_AMT) AS DISCOUNT_SLS_PROMO_12MO
FROM 
ssharma_db.at_${hiveconf:CAMPAIGN_VERSION}_testing1 
group by customer_key,cell_key,gap_cell_start_date,gap_cell_end_date 
order by customer_key,cell_key,gap_cell_start_date,gap_cell_end_date;

drop table if exists SSHARMA_DB.at_${hiveconf:CAMPAIGN_VERSION}_TEST2;
CREATE TABLE SSHARMA_DB.at_${hiveconf:CAMPAIGN_VERSION}_TEST2 AS SELECT 
CUSTOMER_KEY, CELL_KEY, GAP_CELL_START_DATE, GAP_CELL_END_DATE, RESPONSES, 
NUM_TXNS_SLS_PROMO_12MO, GROSS_SALES_SLS_PROMO_12MO, DISCOUNT_SLS_PROMO_12MO,
NVL(GROSS_SALES_SLS_PROMO_12MO,0) + NVL(DISCOUNT_SLS_PROMO_12MO,0) AS NET_SALES_SLS_PROMO_12MO,
(CASE
WHEN RESPONSES > 0 THEN 1
ELSE NULL
END) AS RESPONSE_FLAG
FROM SSHARMA_DB.AT_${hiveconf:CAMPAIGN_VERSION}_TEST1; 


drop table if exists SSHARMA_DB.AT_${hiveconf:CAMPAIGN_VERSION}_TEST3;
CREATE TABLE SSHARMA_DB.AT_${hiveconf:CAMPAIGN_VERSION}_TEST3 AS SELECT
T3.CUSTOMER_KEY, T3.AT_PROMOTIONS_RECEIVED_12MO, T4.AT_PROMOTIONS_RESPONDED_12MO,
T4.NUM_TXNS_SLS_PROMO_12MO, T4.GROSS_SALES_SLS_PROMO_12MO, T4.DISCOUNT_SLS_PROMO_12MO,
T4.NET_SALES_SLS_PROMO_12MO
FROM (
SELECT  T1.CUSTOMER_KEY, COUNT(DISTINCT T1.CELL_KEY) AS AT_PROMOTIONS_RECEIVED_12MO FROM SSHARMA_DB.AT_${hiveconf:CAMPAIGN_VERSION}_TEMP T1 GROUP BY T1.CUSTOMER_KEY
) T3
LEFT OUTER JOIN 
(
SELECT  T2.CUSTOMER_KEY,SUM(NVL(T2.RESPONSE_FLAG,0)) AS AT_PROMOTIONS_RESPONDED_12MO,
SUM(NVL(NUM_TXNS_SLS_PROMO_12MO,0)) AS NUM_TXNS_SLS_PROMO_12MO, 
SUM(NVL(GROSS_SALES_SLS_PROMO_12MO,0)) AS GROSS_SALES_SLS_PROMO_12MO, 
SUM(NVL(DISCOUNT_SLS_PROMO_12MO,0)) AS DISCOUNT_SLS_PROMO_12MO,
SUM(NVL(NET_SALES_SLS_PROMO_12MO,0)) AS NET_SALES_SLS_PROMO_12MO
FROM SSHARMA_DB.AT_${hiveconf:CAMPAIGN_VERSION}_TEST2 T2 GROUP BY T2.CUSTOMER_KEY
) T4
ON T3.CUSTOMER_KEY = T4.CUSTOMER_KEY
ORDER BY T3.CUSTOMER_KEY;

drop table if exists SSHARMA_DB.AT_${hiveconf:CAMPAIGN_VERSION}_PROMOTIONS_P365;
CREATE TABLE SSHARMA_DB.AT_${hiveconf:CAMPAIGN_VERSION}_PROMOTIONS_P365 AS SELECT 
CUSTOMER_KEY, AT_PROMOTIONS_RECEIVED_12MO, AT_PROMOTIONS_RESPONDED_12MO, 
AT_PROMOTIONS_RESPONDED_12MO / AT_PROMOTIONS_RECEIVED_12MO AS RESPONSE_RATE_12MO,
NUM_TXNS_SLS_PROMO_12MO, GROSS_SALES_SLS_PROMO_12MO, DISCOUNT_SLS_PROMO_12MO,
NET_SALES_SLS_PROMO_12MO
FROM SSHARMA_DB.AT_${hiveconf:CAMPAIGN_VERSION}_TEST3;


















DROP TABLE IF EXISTS ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_COMBINED;
CREATE TABLE ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_COMBINED AS
SELECT
T0.*,
T1.VISASIG_FLAG, 
T1.BASIC_FLAG,
T1.SILVER_FLAG,
T1.SISTER_FLAG,
T1.CARD_STATUS,
T2.DAYS_LAST_PUR,
T2.DAYS_LAST_PUR_ONL,
T2.DAYS_LAST_PUR_RTL,
T2.DAYS_LAST_PUR_CP,
T2.DAYS_LAST_PUR_CP_ONL,
T2.DAYS_LAST_PUR_CP_RTL,
T3.DAYS_ON_BOOKS, 
T3.DAYS_ON_BOOKS_CP,
T4.DIV_SHP,
T4.DIV_SHP_ONL,
T4.DIV_SHP_RTL,
T4.DIV_SHP_CP,
T4.DIV_SHP_CP_ONL,
T4.DIV_SHP_CP_RTL,
T5.AT_PROMOTIONS_RECEIVED_12MO, T5.AT_PROMOTIONS_RESPONDED_12MO, 
T5.RESPONSE_RATE_12MO,
T5.NUM_TXNS_SLS_PROMO_12MO, T5.GROSS_SALES_SLS_PROMO_12MO, T5.DISCOUNT_SLS_PROMO_12MO,
T5.NET_SALES_SLS_PROMO_12MO
FROM ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_TRANSACTIONS_2 T0
LEFT OUTER JOIN ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS T1
ON T0.CUSTOMER_KEY = T1.CUSTOMER_KEY
LEFT OUTER JOIN ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_DAYS_LAST_PUR T2
ON T0.CUSTOMER_KEY = T2.CUSTOMER_KEY
LEFT OUTER JOIN ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_DAYS_ON_BOOKS T3
ON T0.CUSTOMER_KEY = T3.CUSTOMER_KEY
LEFT OUTER JOIN ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_DIV_SHP T4
ON T0.CUSTOMER_KEY = T4.CUSTOMER_KEY
LEFT OUTER JOIN ssharma_db.AT_${hiveconf:CAMPAIGN_VERSION}_PROMOTIONS_P365 T5
ON T0.CUSTOMER_KEY = T5.CUSTOMER_KEY
;



